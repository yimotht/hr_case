#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç–∏ –∏ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫
"""
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import app, get_db, init_db

def test_multilang():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç–∏"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç–∏ ===")
    
    with app.test_client() as client:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤
        print("1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫...")
        response = client.get('/set_language/en')
        assert response.status_code == 302, f"–û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 302, –ø–æ–ª—É—á–µ–Ω {response.status_code}"
        print("   ‚úì –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        print("2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∫–∏—Ç–∞–π—Å–∫–∏–π —è–∑—ã–∫...")
        response = client.get('/set_language/zh')
        assert response.status_code == 302, f"–û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 302, –ø–æ–ª—É—á–µ–Ω {response.status_code}"
        print("   ‚úì –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∫–∏—Ç–∞–π—Å–∫–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        print("3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫...")
        response = client.get('/set_language/ru')
        assert response.status_code == 302, f"–û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 302, –ø–æ–ª—É—á–µ–Ω {response.status_code}"
        print("   ‚úì –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        print("4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞...")
        response = client.get('/login')
        assert response.status_code == 200, f"–û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 200, –ø–æ–ª—É—á–µ–Ω {response.status_code}"
        print("   ‚úì –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")

def test_internship_catalog():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–∞—Ç–∞–ª–æ–≥–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫ ===")
    
    with app.test_client() as client:
        # –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤–æ–π—Ç–∏ –∫–∞–∫ HR
        print("1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞—Ç–∞–ª–æ–≥—É —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        response = client.get('/hr/internships')
        assert response.status_code == 302, f"–û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 302 (—Ä–µ–¥–∏—Ä–µ–∫—Ç), –ø–æ–ª—É—á–µ–Ω {response.status_code}"
        print("   ‚úì –î–æ—Å—Ç—É–ø –∫ –∫–∞—Ç–∞–ª–æ–≥—É —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫ –∑–∞—â–∏—â–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
        
        print("2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ä–º–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫—É...")
        response = client.get('/hr/internships/1/apply')
        assert response.status_code == 302, f"–û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 302 (—Ä–µ–¥–∏—Ä–µ–∫—Ç), –ø–æ–ª—É—á–µ–Ω {response.status_code}"
        print("   ‚úì –î–æ—Å—Ç—É–ø –∫ —Ñ–æ—Ä–º–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –∑–∞—â–∏—â–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")

def test_database():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ===")
    
    with app.app_context():
        db = get_db()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        tables = ['users', 'profiles', 'companies', 'vacancies', 'resumes', 
                 'skills', 'resume_skills', 'applications', 'internship_requests', 
                 'internship_responses', 'moderation_logs']
        
        for table in tables:
            result = db.execute(f"SELECT name FROM sqlite_master WHERE type='table' AND name='{table}'").fetchone()
            assert result is not None, f"–¢–∞–±–ª–∏—Ü–∞ {table} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
            print(f"   ‚úì –¢–∞–±–ª–∏—Ü–∞ {table} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        print("   ‚úì –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ HR –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        with app.app_context():
            init_db()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        test_multilang()
        test_internship_catalog()
        test_database()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\n–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:")
        print("‚úì –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å (—Ä—É—Å—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –∫–∏—Ç–∞–π—Å–∫–∏–π)")
        print("‚úì –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤ –≤–Ω–∏–∑—É –ø–æ —Ü–µ–Ω—Ç—Ä—É")
        print("‚úì –ö–∞—Ç–∞–ª–æ–≥ —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫ –¥–ª—è —Ä–æ–ª–∏ Company_HR")
        print("‚úì –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
